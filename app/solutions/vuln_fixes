***Fix for SQL Injection









*** Fixes for OS Code Execution and Cross-site Scripting (Reflected)

In exec.php, replace:

if ($_SERVER["REQUEST_METHOD"] == "POST") {
        echo "<h2>Your Results for " . $_POST["target"] . "</h2>";
        $output = shell_exec('ping -c 3 ' . $_POST["target"]);  
        echo "<pre>$output</pre>";
        echo "<br><br>";

By:

if ($_SERVER["REQUEST_METHOD"] == "POST") {
            $target = test_input($_POST["target"]);
            echo "<h2>Your Results for " . $target . "</h2>";
            $output = shell_exec('ping -c 3 ' . $target);  
            echo "<pre>$output</pre>";
            echo "<br><br>";
            $str = "This is some <b>bold</b> text.";
}

        function test_input($data) {
          $target = trim($data);
          $target = stripslashes($data);
          $target = htmlspecialchars($data);
          $target = str_replace(";","",$target);
          return $target;
}


Explanation: Using the function validate_input to validate IP address input format, attackers cannot enter arbitrary code.


